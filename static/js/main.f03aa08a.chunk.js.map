{"version":3,"sources":["components/Jumbotron.jsx","actions/index.js","components/FavouritesButton.jsx","components/SearchHeader.jsx","components/Movie.jsx","pages/SearchResults.jsx","components/FavouritesHeader.jsx","pages/FavouritesList.jsx","components/Router.js","App.jsx","reducers/movies.js","reducers/favourites.js","reducers/index.js","index.js"],"names":["Jumbotron","className","style","borderRadius","MOVIES","ADD_FAV","REMOVE_FAV","FavouritesButton","url","children","to","SearchHeader","props","handleSearch","e","preventDefault","process","state","query","fetch","method","then","response","json","jsonObj","movies","results","Form","onSubmit","this","Group","as","Row","Col","xs","sm","type","Control","placeholder","onChange","event","setState","target","value","Button","bsstyle","disabled","Component","connect","items","Movie","handleAddFavourite","favourited","addToFavourites","movie","handleRemoveFavourite","removeFromFavourites","displayFavouriteIcon","onClick","color","cursor","title","formatDate","moviedate","split","reverse","join","isFavourite","href","id","rel","src","poster_path","alt","release_date","overview","vote_average","SearchResults","length","map","item","favourites","find","fav","FavouritesHeader","top","FavouritesList","Router","exact","path","element","App","Container","fluid","action","filter","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f03aa08a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Jumbotron = () => (\r\n  <div className=\"row\">\r\n    <div className=\"jumbotron text-center\" style={{ borderRadius: 0 }}>\r\n      <h1 className=\"display-4\">Movies App</h1>\r\n      <p className=\"lead\">\r\n        Type the name of your favourite movie below, then click the search\r\n        button\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Jumbotron;\r\n","export const MOVIES = \"MOVIES\";\r\nexport const ADD_FAV = \"ADD_FAV\";\r\nexport const REMOVE_FAV = \"REMOVE_FAV\";\r\n\r\nexport const movies = items => {\r\n  const action = {\r\n    type: MOVIES,\r\n    items\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const addToFavourites = movie => {\r\n  const action = {\r\n    type: ADD_FAV,\r\n    movie\r\n  }\r\n  return action;\r\n}\r\n\r\nexport const removeFromFavourites = movie => {\r\n  const action = {\r\n    type: REMOVE_FAV,\r\n    movie\r\n  }\r\n  return action;\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavouritesButton = ({ url, children }) => (\r\n  <Link to={url} className=\"btn btn-info\">\r\n    {children}\r\n  </Link>\r\n);\r\n\r\nFavouritesButton.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FavouritesButton;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { movies } from \"../actions\";\r\n\r\nimport FavouritesButton from \"./FavouritesButton\";\r\n\r\nclass SearchHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: \"\",\r\n    };\r\n  }\r\n\r\n  handleSearch = (e) => {\r\n    e.preventDefault();\r\n    let url = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&page=1&query=${this.state.query}`;\r\n    fetch(url, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonObj) => {\r\n        this.props.movies(jsonObj.results);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSearch}>\r\n        <Form.Group as={Row}>\r\n          <Col xs={12} sm={2}>\r\n            <FavouritesButton url=\"/favourites\" type=\"info\">\r\n              View Favourites\r\n            </FavouritesButton>\r\n          </Col>\r\n          <Col xs={12} sm={8}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Name of a movie...\"\r\n              onChange={(event) =>\r\n                this.setState({\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={2}>\r\n            <Button\r\n              bsstyle=\"primary\"\r\n              type=\"submit\"\r\n              disabled={this.state.query === \"\"}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { movies })(SearchHeader);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addToFavourites, removeFromFavourites } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Movie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      favourited: this.props.isFavourite ? true : false,\r\n    };\r\n  }\r\n\r\n  handleAddFavourite = () => {\r\n    this.setState({\r\n      favourited: !this.state.favourited,\r\n    });\r\n    this.props.addToFavourites(this.props.movie);\r\n  };\r\n\r\n  handleRemoveFavourite = () => {\r\n    this.setState({\r\n      favourited: !this.state.favourited,\r\n    });\r\n    this.props.removeFromFavourites(this.props.movie);\r\n  };\r\n\r\n  displayFavouriteIcon = () => {\r\n    return !this.state.favourited ? (\r\n      <span\r\n        className=\"glyphicon glyphicon-heart-empty\"\r\n        onClick={this.handleAddFavourite}\r\n        style={{ color: \"gold\", cursor: \"pointer\" }}\r\n        title=\"Add to favourites\"\r\n      ></span>\r\n    ) : (\r\n      <span\r\n        className=\"glyphicon glyphicon-heart\"\r\n        onClick={this.handleRemoveFavourite}\r\n        style={{ color: \"gold\", cursor: \"pointer\" }}\r\n        title=\"Remove from favourites\"\r\n      ></span>\r\n    );\r\n  };\r\n\r\n  formatDate = (moviedate) => {\r\n    return moviedate.split(\"-\").reverse().join(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const movie = this.props.movie;\r\n    return (\r\n      <div className=\"col-xs-12 col-sm-6 col-md-4\">\r\n        <div className=\"thumbnail\">\r\n          <a\r\n            href={`https://www.themoviedb.org/movie/${movie.id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`}\r\n              alt=\"None\"\r\n            />\r\n          </a>\r\n          <div className=\"caption\">\r\n            <h3>\r\n              {movie.title} {this.displayFavouriteIcon()}\r\n            </h3>\r\n            <p>\r\n              <strong>{this.formatDate(movie.release_date)}</strong>\r\n            </p>\r\n            <p id=\"overview\">{movie.overview}</p>\r\n            <p>\r\n              User Score:{\" \"}\r\n              <span className=\"badge badge-default\">\r\n                <span\r\n                  className=\"glyphicon glyphicon-star\"\r\n                  aria-hidden=\"true\"\r\n                ></span>{\" \"}\r\n                {movie.vote_average}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovie.propTypes = {\r\n  movie: PropTypes.object.isRequired,\r\n  isFavourite: PropTypes.bool,\r\n};\r\n\r\nexport default connect(null, { addToFavourites, removeFromFavourites })(Movie);\r\n","import React, { Component } from \"react\";\r\nimport SearchHeader from \"../components/SearchHeader\";\r\nimport Movie from \"../components/Movie\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SearchResults extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchHeader />\r\n        <hr />\r\n        {this.props.movies.length > 0 &&\r\n          this.props.movies.map(\r\n            (item) =>\r\n              item && (\r\n                <Movie\r\n                  key={item.id}\r\n                  movie={item}\r\n                  isFavourite={\r\n                    this.props.favourites.length > 0 &&\r\n                    this.props.favourites.find((fav) => fav.id === item.id)\r\n                      ? true\r\n                      : false\r\n                  }\r\n                />\r\n              )\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movies,\r\n    favourites: state.favourites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SearchResults);\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport FavouritesButton from \"./FavouritesButton\";\r\n\r\nconst FavouritesHeader = () => (\r\n  <Row>\r\n    <Col sm={2}>\r\n      <FavouritesButton url=\"/\" type=\"info\">\r\n        Back to Search\r\n      </FavouritesButton>\r\n    </Col>\r\n    <Col sm={10}>\r\n      <h4>\r\n        My Favourite Movies{\" \"}\r\n        <span\r\n          className=\"glyphicon glyphicon-heart\"\r\n          style={{ color: \"gold\", top: \"3px\" }}\r\n        ></span>\r\n      </h4>\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nexport default FavouritesHeader;\r\n","import React, { Component } from \"react\";\r\nimport Movie from \"../components/Movie\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FavouritesHeader from \"../components/FavouritesHeader\";\r\n\r\nclass FavouritesList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <FavouritesHeader />\r\n        <hr />\r\n        {this.props.favourites.map((fav) => (\r\n          <Movie key={fav.id} movie={fav} isFavourite />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favourites: state.favourites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(FavouritesList);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport SearchResults from \"../pages/SearchResults\";\r\nimport FavouritesList from \"../pages/FavouritesList\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Routes>\r\n      <Route exact path=\"/\" element={<SearchResults />} />\r\n      <Route exact path=\"/movies-app\" element={<SearchResults />} />\r\n      <Route exact path=\"/favourites\" element={<FavouritesList />} />\r\n    </Routes>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\nimport Router from \"./components/Router\";\r\n\r\nconst App = () => (\r\n  <Container fluid>\r\n    <Jumbotron />\r\n    <Container>\r\n      <Router />\r\n    </Container>\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import { MOVIES } from \"../actions\";\r\n\r\nconst movies = (state = [], action) => {\r\n  switch(action.type) {\r\n    case MOVIES:\r\n      return action.items\r\n    default:\r\n      return state;\r\n  } \r\n}\r\n\r\nexport default movies;","import { ADD_FAV, REMOVE_FAV } from \"../actions\";\r\n\r\nconst favourites = (state = [], action) => {\r\n  switch(action.type) {\r\n    case ADD_FAV:\r\n      return [ ...state, action.movie];\r\n    case REMOVE_FAV:\r\n      return state.filter(item => item.id !== action.movie.id);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default favourites;","import movies from \"./movies\";\r\nimport favourites from \"./favourites\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  movies,\r\n  favourites\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}